@using Microsoft.AspNetCore.Identity
@using ThreadAlert.Entities

@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager


<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    if (User.IsInRole("Member"))
    {
        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Settings">Settings</a>
        </li>
    }
    if (User.IsInRole("Admin"))
    {
        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="" asp-controller="Message" asp-action="Index">Admin Panel</a>
        </li>
    }
    <li class="nav-item">
        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
            <input type="hidden" id="hfUsername" value="@UserManager.GetUserId(User)" />
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home")">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Logout</button>
        </form>
    </li>
}
</ul>
